function varargout=caret_list_check_GFT(what,varargin); 

coordfile='lh.FIDUCIAL.coord'; 
topofile='lh.CLOSED.topo'; 

S=caret_getsurface(coordfile,topofile); 
S=caret_calcarea(S);

switch (what) 
    case 'montecarlo'
        N=varargin{1}; 
        p=varargin{2};
        for sm=4:10
            T=caret_montecarlo(S,tinv(1-p,N-1),N,sm);
            filename=sprintf('MC_.%3.3f_%d_%d.mat',1-p,N,sm);
            save(filename,'T');
        end; 
    case 'compare' 
        D=[]; 
        N=varargin{1}; 
        p=varargin{2};
        for sm=4:10
            filename=sprintf('MC_%3.3f_%d_%d.mat',1-p,N,sm);
            load(filename);
            X.sm=sm; 
            X.Umax=prctile(T.U,95); 
            X.Kmax=prctile(T.K,95); 
            X.numcluster=mean(T.numcluster); 
            X.totalarea=mean(T.totalarea); 
            X.u=T.u(1); 
            
            % Now do a caret_list on this 
            fwhm=sm;
            x=[0:2];
            R=S.A./((fwhm).^x);
            k=X.Kmax./(fwhm^2);    % K is now also in resel
            Pz = caret_P(1,0,X.u,[1 N-1],'T',1);
            X.Pu = caret_P(1,0,X.Umax,[1 N-1],'T',R);
            [P Pn Em En EN] = caret_P(1,k,X.u,[1 N-1],'T',R);
            
            X.Enumclusters=Em;
            X.Etotalarea=Em*En*fwhm.^2;
            
            % Now check the Possion clumping Heuristic 
            pcl=exp(-k/En);
            X.Pcl= 1 - spm_Pcdf(0,Em*pcl);

            % Now check the same thing using fMRIstat 
            df=[N-1 0;inf inf]; % t-tstats with known fwhm
            
            [X.Pu_frmi,X.Pcl_fmri]=stat_threshold(S.A,S.num_nodes,fwhm,df,X.Umax,X.u,X.Kmax);
            
            D=addstruct(D,X);
        end; 
    case 'test_caret_list'
         D=[]; 
        N=varargin{1}; 
        p=varargin{2};
        sm=varargin{3}; 
        filename=sprintf('MC_%3.3f_%d_%d.mat',1-p,N,sm);
        
        P=size(M.data,2); 
for i=1:num_iter
    indx=sample_wr([1:P],N);
    D=M.data(:,indx); 
    x=unidrnd(2,1,N)*2-3; 
    D=bsxfun(@times,D,x); 
    
    % Do a one-sample t-test on this 
    %b=nanmean(D,2);
    %ResVar=nanvar(D,0,2);
    %ResVar(ResVar==0)=NaN;
    %Z=b./sqrt(ResVar/N);  
    cSPM=caret_getcSPM('onesample_t','data',D); 

        varargout={D}; 
end; 
